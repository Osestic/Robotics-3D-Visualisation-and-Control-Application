
classdef RegisterValuesRequest < ros.Message
    %RegisterValuesRequest MATLAB implementation of interbotix_xs_msgs/RegisterValuesRequest
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'interbotix_xs_msgs/RegisterValuesRequest' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'ff17efd6d442abdb0ecf037a885cc01c' % The MD5 Checksum of the message definition
        PropertyList = { 'CmdType' 'Name' 'Reg' 'Value' } % List of non-constant message properties
        ROSPropertyList = { 'cmd_type' 'name' 'reg' 'value' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        CmdType
        Name
        Reg
        Value
    end
    methods
        function set.CmdType(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RegisterValuesRequest', 'CmdType');
            obj.CmdType = char(val);
        end
        function set.Name(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RegisterValuesRequest', 'Name');
            obj.Name = char(val);
        end
        function set.Reg(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'RegisterValuesRequest', 'Reg');
            obj.Reg = char(val);
        end
        function set.Value(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'RegisterValuesRequest', 'Value');
            obj.Value = int32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.interbotix_xs_msgs.RegisterValuesRequest.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.interbotix_xs_msgs.RegisterValuesRequest(strObj);
        end
    end
end
